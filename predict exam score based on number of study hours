{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "87471bcc-c510-44cc-bd26-74bdd20e010b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# problem statement\n",
    "''' predict the student final score based on their number of study hours'''"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4be1d584-9539-4b22-88be-72330f77ef33",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   hours_study  Exam_score\n",
      "0            2          50\n",
      "1            3          60\n",
      "2            4          70\n",
      "3            5          75\n",
      "4            6          80\n",
      "5            7          85\n",
      "6            8          90\n",
      "7            9          92\n",
      "8           10          95\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter the number of hours you study:  8\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "predicted exam score:88.81\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\dhana\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\sklearn\\utils\\validation.py:2739: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LinearRegression\n",
    "\n",
    "sharad = {\"hours_study\" : [2,3,4,5,6,7,8,9,10],\"Exam_score\" :[50,60,70,75,80,85,90,92,95]}\n",
    "\n",
    "df = pd.DataFrame(sharad)\n",
    "\n",
    "print(df)\n",
    "\n",
    "x = df[[\"hours_study\"]]\n",
    "y = df[[\"Exam_score\"]]\n",
    "\n",
    "x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.2,random_state=42)\n",
    "\n",
    "model = LinearRegression()\n",
    "\n",
    "model.fit(x_train,y_train)\n",
    "\n",
    "user_input =float(input (\"enter the number of hours you study: \"))\n",
    "\n",
    "predicted_score = model.predict([[user_input]])\n",
    "\n",
    "print(f\"predicted exam score:{predicted_score[0].item():.2f}\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d210c632-d076-40ba-ad3e-cb6737eaddcc",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
